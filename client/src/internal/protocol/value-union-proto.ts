// automatically generated by the FlatBuffers compiler, do not modify

import { ArrayValueProto } from './array-value-proto.js';
import { BooleanValueProto } from './boolean-value-proto.js';
import { DataReferenceValueProto } from './data-reference-value-proto.js';
import { DateValueProto } from './date-value-proto.js';
import { MapValueProto } from './map-value-proto.js';
import { NullValueProto } from './null-value-proto.js';
import { NumberValueProto } from './number-value-proto.js';
import { ObjectValueProto } from './object-value-proto.js';
import { ServiceReferenceValueProto } from './service-reference-value-proto.js';
import { SetValueProto } from './set-value-proto.js';
import { StringValueProto } from './string-value-proto.js';
import { UndefinedValueProto } from './undefined-value-proto.js';


export enum ValueUnionProto{
  NONE = 0,
  UndefinedValueProto = 1,
  NullValueProto = 2,
  BooleanValueProto = 3,
  StringValueProto = 4,
  NumberValueProto = 5,
  ObjectValueProto = 6,
  ArrayValueProto = 7,
  DataReferenceValueProto = 8,
  ServiceReferenceValueProto = 9,
  MapValueProto = 10,
  SetValueProto = 11,
  DateValueProto = 12
}

export function unionToValueUnionProto(
  type: ValueUnionProto,
  accessor: (obj:ArrayValueProto|BooleanValueProto|DataReferenceValueProto|DateValueProto|MapValueProto|NullValueProto|NumberValueProto|ObjectValueProto|ServiceReferenceValueProto|SetValueProto|StringValueProto|UndefinedValueProto) => ArrayValueProto|BooleanValueProto|DataReferenceValueProto|DateValueProto|MapValueProto|NullValueProto|NumberValueProto|ObjectValueProto|ServiceReferenceValueProto|SetValueProto|StringValueProto|UndefinedValueProto|null
): ArrayValueProto|BooleanValueProto|DataReferenceValueProto|DateValueProto|MapValueProto|NullValueProto|NumberValueProto|ObjectValueProto|ServiceReferenceValueProto|SetValueProto|StringValueProto|UndefinedValueProto|null {
  switch(ValueUnionProto[type]) {
    case 'NONE': return null; 
    case 'UndefinedValueProto': return accessor(new UndefinedValueProto())! as UndefinedValueProto;
    case 'NullValueProto': return accessor(new NullValueProto())! as NullValueProto;
    case 'BooleanValueProto': return accessor(new BooleanValueProto())! as BooleanValueProto;
    case 'StringValueProto': return accessor(new StringValueProto())! as StringValueProto;
    case 'NumberValueProto': return accessor(new NumberValueProto())! as NumberValueProto;
    case 'ObjectValueProto': return accessor(new ObjectValueProto())! as ObjectValueProto;
    case 'ArrayValueProto': return accessor(new ArrayValueProto())! as ArrayValueProto;
    case 'DataReferenceValueProto': return accessor(new DataReferenceValueProto())! as DataReferenceValueProto;
    case 'ServiceReferenceValueProto': return accessor(new ServiceReferenceValueProto())! as ServiceReferenceValueProto;
    case 'MapValueProto': return accessor(new MapValueProto())! as MapValueProto;
    case 'SetValueProto': return accessor(new SetValueProto())! as SetValueProto;
    case 'DateValueProto': return accessor(new DateValueProto())! as DateValueProto;
    default: return null;
  }
}

export function unionListToValueUnionProto(
  type: ValueUnionProto, 
  accessor: (index: number, obj:ArrayValueProto|BooleanValueProto|DataReferenceValueProto|DateValueProto|MapValueProto|NullValueProto|NumberValueProto|ObjectValueProto|ServiceReferenceValueProto|SetValueProto|StringValueProto|UndefinedValueProto) => ArrayValueProto|BooleanValueProto|DataReferenceValueProto|DateValueProto|MapValueProto|NullValueProto|NumberValueProto|ObjectValueProto|ServiceReferenceValueProto|SetValueProto|StringValueProto|UndefinedValueProto|null, 
  index: number
): ArrayValueProto|BooleanValueProto|DataReferenceValueProto|DateValueProto|MapValueProto|NullValueProto|NumberValueProto|ObjectValueProto|ServiceReferenceValueProto|SetValueProto|StringValueProto|UndefinedValueProto|null {
  switch(ValueUnionProto[type]) {
    case 'NONE': return null; 
    case 'UndefinedValueProto': return accessor(index, new UndefinedValueProto())! as UndefinedValueProto;
    case 'NullValueProto': return accessor(index, new NullValueProto())! as NullValueProto;
    case 'BooleanValueProto': return accessor(index, new BooleanValueProto())! as BooleanValueProto;
    case 'StringValueProto': return accessor(index, new StringValueProto())! as StringValueProto;
    case 'NumberValueProto': return accessor(index, new NumberValueProto())! as NumberValueProto;
    case 'ObjectValueProto': return accessor(index, new ObjectValueProto())! as ObjectValueProto;
    case 'ArrayValueProto': return accessor(index, new ArrayValueProto())! as ArrayValueProto;
    case 'DataReferenceValueProto': return accessor(index, new DataReferenceValueProto())! as DataReferenceValueProto;
    case 'ServiceReferenceValueProto': return accessor(index, new ServiceReferenceValueProto())! as ServiceReferenceValueProto;
    case 'MapValueProto': return accessor(index, new MapValueProto())! as MapValueProto;
    case 'SetValueProto': return accessor(index, new SetValueProto())! as SetValueProto;
    case 'DateValueProto': return accessor(index, new DateValueProto())! as DateValueProto;
    default: return null;
  }
}

