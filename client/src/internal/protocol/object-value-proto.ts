// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { PropertyProto } from './property-proto.js';


export class ObjectValueProto {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):ObjectValueProto {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsObjectValueProto(bb:flatbuffers.ByteBuffer, obj?:ObjectValueProto):ObjectValueProto {
  return (obj || new ObjectValueProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsObjectValueProto(bb:flatbuffers.ByteBuffer, obj?:ObjectValueProto):ObjectValueProto {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ObjectValueProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

properties(index: number, obj?:PropertyProto):PropertyProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PropertyProto()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

propertiesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startObjectValueProto(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addProperties(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, propertiesOffset, 0);
}

static createPropertiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPropertiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endObjectValueProto(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createObjectValueProto(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset):flatbuffers.Offset {
  ObjectValueProto.startObjectValueProto(builder);
  ObjectValueProto.addProperties(builder, propertiesOffset);
  return ObjectValueProto.endObjectValueProto(builder);
}
}
