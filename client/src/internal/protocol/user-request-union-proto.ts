// automatically generated by the FlatBuffers compiler, do not modify

import { CallServiceMethodRequestProto } from './call-service-method-request-proto.js';
import { GetDataRequestProto } from './get-data-request-proto.js';
import { SaveDataRequestProto } from './save-data-request-proto.js';
import { SubscribeDataUpdatesRequestProto } from './subscribe-data-updates-request-proto.js';
import { SubscribeMessageRequestProto } from './subscribe-message-request-proto.js';
import { UnsubscribeDataUpdatesRequestProto } from './unsubscribe-data-updates-request-proto.js';
import { UnsubscribeMessageRequestProto } from './unsubscribe-message-request-proto.js';


export enum UserRequestUnionProto{
  NONE = 0,
  CallServiceMethodRequestProto = 1,
  GetDataRequestProto = 2,
  SaveDataRequestProto = 3,
  SubscribeMessageRequestProto = 4,
  UnsubscribeMessageRequestProto = 5,
  SubscribeDataUpdatesRequestProto = 6,
  UnsubscribeDataUpdatesRequestProto = 7
}

export function unionToUserRequestUnionProto(
  type: UserRequestUnionProto,
  accessor: (obj:CallServiceMethodRequestProto|GetDataRequestProto|SaveDataRequestProto|SubscribeDataUpdatesRequestProto|SubscribeMessageRequestProto|UnsubscribeDataUpdatesRequestProto|UnsubscribeMessageRequestProto) => CallServiceMethodRequestProto|GetDataRequestProto|SaveDataRequestProto|SubscribeDataUpdatesRequestProto|SubscribeMessageRequestProto|UnsubscribeDataUpdatesRequestProto|UnsubscribeMessageRequestProto|null
): CallServiceMethodRequestProto|GetDataRequestProto|SaveDataRequestProto|SubscribeDataUpdatesRequestProto|SubscribeMessageRequestProto|UnsubscribeDataUpdatesRequestProto|UnsubscribeMessageRequestProto|null {
  switch(UserRequestUnionProto[type]) {
    case 'NONE': return null; 
    case 'CallServiceMethodRequestProto': return accessor(new CallServiceMethodRequestProto())! as CallServiceMethodRequestProto;
    case 'GetDataRequestProto': return accessor(new GetDataRequestProto())! as GetDataRequestProto;
    case 'SaveDataRequestProto': return accessor(new SaveDataRequestProto())! as SaveDataRequestProto;
    case 'SubscribeMessageRequestProto': return accessor(new SubscribeMessageRequestProto())! as SubscribeMessageRequestProto;
    case 'UnsubscribeMessageRequestProto': return accessor(new UnsubscribeMessageRequestProto())! as UnsubscribeMessageRequestProto;
    case 'SubscribeDataUpdatesRequestProto': return accessor(new SubscribeDataUpdatesRequestProto())! as SubscribeDataUpdatesRequestProto;
    case 'UnsubscribeDataUpdatesRequestProto': return accessor(new UnsubscribeDataUpdatesRequestProto())! as UnsubscribeDataUpdatesRequestProto;
    default: return null;
  }
}

export function unionListToUserRequestUnionProto(
  type: UserRequestUnionProto, 
  accessor: (index: number, obj:CallServiceMethodRequestProto|GetDataRequestProto|SaveDataRequestProto|SubscribeDataUpdatesRequestProto|SubscribeMessageRequestProto|UnsubscribeDataUpdatesRequestProto|UnsubscribeMessageRequestProto) => CallServiceMethodRequestProto|GetDataRequestProto|SaveDataRequestProto|SubscribeDataUpdatesRequestProto|SubscribeMessageRequestProto|UnsubscribeDataUpdatesRequestProto|UnsubscribeMessageRequestProto|null, 
  index: number
): CallServiceMethodRequestProto|GetDataRequestProto|SaveDataRequestProto|SubscribeDataUpdatesRequestProto|SubscribeMessageRequestProto|UnsubscribeDataUpdatesRequestProto|UnsubscribeMessageRequestProto|null {
  switch(UserRequestUnionProto[type]) {
    case 'NONE': return null; 
    case 'CallServiceMethodRequestProto': return accessor(index, new CallServiceMethodRequestProto())! as CallServiceMethodRequestProto;
    case 'GetDataRequestProto': return accessor(index, new GetDataRequestProto())! as GetDataRequestProto;
    case 'SaveDataRequestProto': return accessor(index, new SaveDataRequestProto())! as SaveDataRequestProto;
    case 'SubscribeMessageRequestProto': return accessor(index, new SubscribeMessageRequestProto())! as SubscribeMessageRequestProto;
    case 'UnsubscribeMessageRequestProto': return accessor(index, new UnsubscribeMessageRequestProto())! as UnsubscribeMessageRequestProto;
    case 'SubscribeDataUpdatesRequestProto': return accessor(index, new SubscribeDataUpdatesRequestProto())! as SubscribeDataUpdatesRequestProto;
    case 'UnsubscribeDataUpdatesRequestProto': return accessor(index, new UnsubscribeDataUpdatesRequestProto())! as UnsubscribeDataUpdatesRequestProto;
    default: return null;
  }
}

