// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { UserMessageUnionWrapperBytesProto } from './user-message-union-wrapper-bytes-proto.js';


export class RiverUserMessageProto {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):RiverUserMessageProto {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRiverUserMessageProto(bb:flatbuffers.ByteBuffer, obj?:RiverUserMessageProto):RiverUserMessageProto {
  return (obj || new RiverUserMessageProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRiverUserMessageProto(bb:flatbuffers.ByteBuffer, obj?:RiverUserMessageProto):RiverUserMessageProto {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RiverUserMessageProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

logContext():string|null
logContext(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
logContext(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

warpId():flatbuffers.Long {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
}

warpVersion():flatbuffers.Long {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
}

message(obj?:UserMessageUnionWrapperBytesProto):UserMessageUnionWrapperBytesProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new UserMessageUnionWrapperBytesProto()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startRiverUserMessageProto(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addLogContext(builder:flatbuffers.Builder, logContextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, logContextOffset, 0);
}

static addWarpId(builder:flatbuffers.Builder, warpId:flatbuffers.Long) {
  builder.addFieldInt64(1, warpId, builder.createLong(0, 0));
}

static addWarpVersion(builder:flatbuffers.Builder, warpVersion:flatbuffers.Long) {
  builder.addFieldInt64(2, warpVersion, builder.createLong(0, 0));
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, messageOffset, 0);
}

static endRiverUserMessageProto(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // log_context
  return offset;
}

}
