// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class DataReferenceValueProto {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):DataReferenceValueProto {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDataReferenceValueProto(bb:flatbuffers.ByteBuffer, obj?:DataReferenceValueProto):DataReferenceValueProto {
  return (obj || new DataReferenceValueProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDataReferenceValueProto(bb:flatbuffers.ByteBuffer, obj?:DataReferenceValueProto):DataReferenceValueProto {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DataReferenceValueProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

classId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

primaryKey():string|null
primaryKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
primaryKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startDataReferenceValueProto(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addClassId(builder:flatbuffers.Builder, classId:number) {
  builder.addFieldInt16(0, classId, 0);
}

static addPrimaryKey(builder:flatbuffers.Builder, primaryKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, primaryKeyOffset, 0);
}

static endDataReferenceValueProto(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // primary_key
  return offset;
}

static createDataReferenceValueProto(builder:flatbuffers.Builder, classId:number, primaryKeyOffset:flatbuffers.Offset):flatbuffers.Offset {
  DataReferenceValueProto.startDataReferenceValueProto(builder);
  DataReferenceValueProto.addClassId(builder, classId);
  DataReferenceValueProto.addPrimaryKey(builder, primaryKeyOffset);
  return DataReferenceValueProto.endDataReferenceValueProto(builder);
}
}
