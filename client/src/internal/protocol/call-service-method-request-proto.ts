// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { InboundDataDeltaProto } from './inbound-data-delta-proto.js';
import { ValueProto } from './value-proto.js';


export class CallServiceMethodRequestProto {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):CallServiceMethodRequestProto {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCallServiceMethodRequestProto(bb:flatbuffers.ByteBuffer, obj?:CallServiceMethodRequestProto):CallServiceMethodRequestProto {
  return (obj || new CallServiceMethodRequestProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCallServiceMethodRequestProto(bb:flatbuffers.ByteBuffer, obj?:CallServiceMethodRequestProto):CallServiceMethodRequestProto {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CallServiceMethodRequestProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

classId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

primaryKey():string|null
primaryKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
primaryKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

methodId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

arguments(index: number, obj?:ValueProto):ValueProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ValueProto()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

argumentsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

referencedDataDeltas(index: number, obj?:InboundDataDeltaProto):InboundDataDeltaProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new InboundDataDeltaProto()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

referencedDataDeltasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startCallServiceMethodRequestProto(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addClassId(builder:flatbuffers.Builder, classId:number) {
  builder.addFieldInt16(0, classId, 0);
}

static addPrimaryKey(builder:flatbuffers.Builder, primaryKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, primaryKeyOffset, 0);
}

static addMethodId(builder:flatbuffers.Builder, methodId:number) {
  builder.addFieldInt16(2, methodId, 0);
}

static addArguments(builder:flatbuffers.Builder, argumentsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, argumentsOffset, 0);
}

static createArgumentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startArgumentsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addReferencedDataDeltas(builder:flatbuffers.Builder, referencedDataDeltasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, referencedDataDeltasOffset, 0);
}

static createReferencedDataDeltasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startReferencedDataDeltasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endCallServiceMethodRequestProto(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // primary_key
  return offset;
}

static createCallServiceMethodRequestProto(builder:flatbuffers.Builder, classId:number, primaryKeyOffset:flatbuffers.Offset, methodId:number, argumentsOffset:flatbuffers.Offset, referencedDataDeltasOffset:flatbuffers.Offset):flatbuffers.Offset {
  CallServiceMethodRequestProto.startCallServiceMethodRequestProto(builder);
  CallServiceMethodRequestProto.addClassId(builder, classId);
  CallServiceMethodRequestProto.addPrimaryKey(builder, primaryKeyOffset);
  CallServiceMethodRequestProto.addMethodId(builder, methodId);
  CallServiceMethodRequestProto.addArguments(builder, argumentsOffset);
  CallServiceMethodRequestProto.addReferencedDataDeltas(builder, referencedDataDeltasOffset);
  return CallServiceMethodRequestProto.endCallServiceMethodRequestProto(builder);
}
}
