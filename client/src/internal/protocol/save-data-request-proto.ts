// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { InboundDataDeltaProto } from './inbound-data-delta-proto.js';


export class SaveDataRequestProto {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):SaveDataRequestProto {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSaveDataRequestProto(bb:flatbuffers.ByteBuffer, obj?:SaveDataRequestProto):SaveDataRequestProto {
  return (obj || new SaveDataRequestProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSaveDataRequestProto(bb:flatbuffers.ByteBuffer, obj?:SaveDataRequestProto):SaveDataRequestProto {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SaveDataRequestProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

dataDeltas(index: number, obj?:InboundDataDeltaProto):InboundDataDeltaProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new InboundDataDeltaProto()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dataDeltasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startSaveDataRequestProto(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addDataDeltas(builder:flatbuffers.Builder, dataDeltasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dataDeltasOffset, 0);
}

static createDataDeltasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDataDeltasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endSaveDataRequestProto(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // data_deltas
  return offset;
}

static createSaveDataRequestProto(builder:flatbuffers.Builder, dataDeltasOffset:flatbuffers.Offset):flatbuffers.Offset {
  SaveDataRequestProto.startSaveDataRequestProto(builder);
  SaveDataRequestProto.addDataDeltas(builder, dataDeltasOffset);
  return SaveDataRequestProto.endSaveDataRequestProto(builder);
}
}
