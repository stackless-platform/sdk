// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { DataHandleProto } from './data-handle-proto.js';
import { PropertyProto } from './property-proto.js';
import { WarpReferenceUnionProto, unionToWarpReferenceUnionProto, unionListToWarpReferenceUnionProto } from './warp-reference-union-proto.js';


export class MessageProto {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):MessageProto {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMessageProto(bb:flatbuffers.ByteBuffer, obj?:MessageProto):MessageProto {
  return (obj || new MessageProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMessageProto(bb:flatbuffers.ByteBuffer, obj?:MessageProto):MessageProto {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MessageProto()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

classId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

sourceType():WarpReferenceUnionProto {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : WarpReferenceUnionProto.NONE;
}

source<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

properties(index: number, obj?:PropertyProto):PropertyProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new PropertyProto()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

propertiesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

referencedDataHandles(index: number, obj?:DataHandleProto):DataHandleProto|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new DataHandleProto()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

referencedDataHandlesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startMessageProto(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addClassId(builder:flatbuffers.Builder, classId:number) {
  builder.addFieldInt16(0, classId, 0);
}

static addSourceType(builder:flatbuffers.Builder, sourceType:WarpReferenceUnionProto) {
  builder.addFieldInt8(1, sourceType, WarpReferenceUnionProto.NONE);
}

static addSource(builder:flatbuffers.Builder, sourceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, sourceOffset, 0);
}

static addProperties(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, propertiesOffset, 0);
}

static createPropertiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPropertiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addReferencedDataHandles(builder:flatbuffers.Builder, referencedDataHandlesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, referencedDataHandlesOffset, 0);
}

static createReferencedDataHandlesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startReferencedDataHandlesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endMessageProto(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 8) // source
  return offset;
}

static createMessageProto(builder:flatbuffers.Builder, classId:number, sourceType:WarpReferenceUnionProto, sourceOffset:flatbuffers.Offset, propertiesOffset:flatbuffers.Offset, referencedDataHandlesOffset:flatbuffers.Offset):flatbuffers.Offset {
  MessageProto.startMessageProto(builder);
  MessageProto.addClassId(builder, classId);
  MessageProto.addSourceType(builder, sourceType);
  MessageProto.addSource(builder, sourceOffset);
  MessageProto.addProperties(builder, propertiesOffset);
  MessageProto.addReferencedDataHandles(builder, referencedDataHandlesOffset);
  return MessageProto.endMessageProto(builder);
}
}
